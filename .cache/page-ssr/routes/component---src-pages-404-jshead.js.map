{"version":3,"file":"component---src-pages-404-jshead.js","mappings":";;;;;;;;;;;;;;;;;AAA8B;AAC9B;;AAEA,MAAMC,MAAM,GAAG,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAChD,MAAMC,QAAQ,GAAI,GAAEC,EAAgB,GAAE;EACtC,MAAMC,UAAU,GAAGL,QAAQ,CAACM,QAAQ,KAAKH,QAAQ;EACjD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAC,qBAAmBE;EAAW,gBAE5D,8EACE,6DAAI,eAAa,CAAK,CACf,eACT,+DAAOH,QAAQ,CAAQ,CAMnB;AAEV,CAAC;AAED,iEAAeH,MAAM;;;;;;;;;;;;;;;;;;ACtCrB;AACA;AACA;AACA;AACA;AACA;;AAE8B;AAG9B,MAAMQ,GAAG,GAAG,CAAC;EAAEC,WAAW;EAAEP,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAA;EAChD,MAAM;IAAEO;EAAK,CAAC,GAAG,wEAchB;EAED,MAAMC,eAAe,GAAGF,WAAW,IAAIC,IAAI,CAACE,YAAY,CAACH,WAAW;EACpE,MAAMI,YAAY,yBAAGH,IAAI,CAACE,YAAY,uDAAjB,mBAAmBV,KAAK;EAE7C,oBACE,iHACE,gEAAQW,YAAY,GAAI,GAAEX,KAAM,MAAKW,YAAa,EAAC,GAAGX,KAAK,CAAS,eACpE;IAAM,IAAI,EAAC,aAAa;IAAC,OAAO,EAAES;EAAgB,EAAG,eACrD;IAAM,QAAQ,EAAC,UAAU;IAAC,OAAO,EAAET;EAAM,EAAG,eAC5C;IAAM,QAAQ,EAAC,gBAAgB;IAAC,OAAO,EAAES;EAAgB,EAAG,eAC5D;IAAM,QAAQ,EAAC,SAAS;IAAC,OAAO,EAAC;EAAS,EAAG,eAC7C;IAAM,IAAI,EAAC,cAAc;IAAC,OAAO,EAAC;EAAS,EAAG,eAC9C;IACE,IAAI,EAAC,iBAAiB;IACtB,OAAO,EAAE,wBAAAD,IAAI,CAACE,YAAY,iFAAjB,oBAAmBE,MAAM,0DAAzB,sBAA2BC,OAAO,KAAK;EAAE,EAClD,eACF;IAAM,IAAI,EAAC,eAAe;IAAC,OAAO,EAAEb;EAAM,EAAG,eAC7C;IAAM,IAAI,EAAC,qBAAqB;IAAC,OAAO,EAAES;EAAgB,EAAG,EAC5DR,QAAQ,CACR;AAEP,CAAC;AAED,iEAAeK,GAAG;;;;;;;;;;;;;;;;;;;ACjDY;AAGW;AACN;AAEnC,MAAMQ,YAAY,GAAG,CAAC;EAAEC,IAAI;EAAEhB;AAAS,CAAC,KAAK;EAC3C,MAAMiB,SAAS,GAAGD,IAAI,CAACP,IAAI,CAACE,YAAY,CAACV,KAAK;EAE9C,oBACE,iDAAC,0DAAM;IAAC,QAAQ,EAAED,QAAS;IAAC,KAAK,EAAEiB;EAAU,gBAC3C,6DAAI,gBAAc,CAAK,eACvB,4DAAG,yDAA2D,CAAI,CAC3D;AAEb,CAAC;AAEM,MAAMC,IAAI,GAAG,mBAAM,iDAAC,uDAAG;EAAC,KAAK,EAAC;AAAgB,EAAG;AAExD,iEAAeH,YAAY;AAEpB,MAAMI,SAAS,eAQrB","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\n// import { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  // let header\n\n  // if (isRootPath) {\n  //   header = (\n  //     <h1 className=\"main-heading\">\n  //       <Link to=\"/\">{title}</Link>\n  //     </h1>\n  //   )\n  // } else {\n  //   header = (\n  //     <Link className=\"header-link-home\" to=\"/\">\n  //       {title}\n  //     </Link>\n  //   )\n  // }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      {/* <header className=\"global-header\">{header}</header> */}\n      <header>\n        <h2>Astral Echoes</h2>\n      </header>\n      <main>{children}</main>\n      {/* <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer> */}\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["React","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","Seo","description","site","metaDescription","siteMetadata","defaultTitle","social","twitter","NotFoundPage","data","siteTitle","Head","pageQuery"],"sourceRoot":""}